{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","URL_BASE","getFilm","title","a","fetch","response","json","Error","FindMovie","addMovieToList","useState","setMovie","inputSearch","setInputSearch","isError","setError","loadMovie","film","Response","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","App","setMovieList","find","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCffC,G,MAAW,uDAEV,SAAeC,EAAtB,kC,4CAAO,WAAuBC,GAAvB,eAAAC,EAAA,+EAEoBC,MAAM,GAAD,OAAIJ,EAAJ,cAAkBE,IAF3C,cAEGG,EAFH,gBAIUA,EAASC,OAJnB,8EAMG,IAAIC,MAAM,SANb,0D,sBCSA,IAAMC,EAA6B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAAsCD,mBAAiB,IAAvD,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAA4BH,oBAAkB,GAA9C,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAS,uCAAG,4BAAAb,EAAA,sEACGF,EAAQW,GADX,OAGM,UAFhBK,EADU,QAGPC,UACPP,EAASM,GACTF,GAAS,KAETJ,EAAS,MACTI,GAAS,IARK,2CAAH,qDA0Bf,OACE,qCACE,uBAAMzB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,wBAEE,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhC,UAAWiC,IAAW,QAAS,CAAE,YAAaT,IAC9CU,MAAOZ,EACPa,SAjBO,SAACC,GACpBb,EAAea,EAAMC,OAAOH,eAoBpBV,GACA,mBAAGxB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACVsC,QAASZ,EAHX,4BASF,qBAAK1B,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,oBACVsC,QArDQ,WACdvC,GACFoB,EAAepB,GAGjB0B,GAAS,GACTF,EAAe,IACfF,EAAS,OA2CD,qCAWN,qBAAKrB,UAAU,YAAf,SACID,GACA,qCACE,oBAAIC,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,aCxFjBwC,EAAgB,WAC3B,MAA+BnB,mBAAkB,IAAjD,mBAAOb,EAAP,KAAeiC,EAAf,KAUA,OACE,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWmB,eAdM,SAACpB,IACAQ,EAAOkC,MAAK,SAAAC,GAAY,OAAKA,EAAajC,SAAWV,EAAMU,WAG/E+B,EAAa,GAAD,mBAAKjC,GAAL,CAAaR,cCR/B4C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1b2f920e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const URL_BASE = 'https://www.omdbapi.com?i=tt3896198&apikey=fa576852';\n\nexport async function getFilm(title: string) {\n  try {\n    const response = await fetch(`${URL_BASE}&t=${title}`);\n\n    return await response.json();\n  } catch (error) {\n    throw new Error('error');\n  }\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../../api/api';\n\ntype Props = {\n  addMovieToList: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovieToList }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [inputSearch, setInputSearch] = useState<string>('');\n  const [isError, setError] = useState<boolean>(false);\n\n  const loadMovie = async () => {\n    const film = await getFilm(inputSearch);\n\n    if (film.Response === 'True') {\n      setMovie(film);\n      setError(false);\n    } else {\n      setMovie(null);\n      setError(true);\n    }\n  };\n\n  const addNewMovie = () => {\n    if (movie) {\n      addMovieToList(movie);\n    }\n\n    setError(false);\n    setInputSearch('');\n    setMovie(null);\n  };\n\n  const handlerInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputSearch(event.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': isError })}\n                value={inputSearch}\n                onChange={handlerInput}\n              />\n            </div>\n          </label>\n          { isError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        { movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovieList] = useState<Movie[]>([]);\n\n  const addMovieToList = (movie: Movie) => {\n    const isMovieAdded = !movies.find(currentMovie => (currentMovie.imdbID === movie.imdbID));\n\n    if (isMovieAdded) {\n      setMovieList([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovieToList={addMovieToList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}